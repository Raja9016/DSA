#include<iostream>
using namespace std;

class node
{
	public:
		int data;
		node* next;
		
	node(int val)
	{
		this->data = val;
		this->next = NULL;
	}
};

void Head(node* &head,int val)
{
	node* temp = new node(val);
	temp->next = head;
	head = temp;
}

void insertAtPosition(node* & head, int position, int d)
{
    if(position == 1) 
    {
        Head(head, d);
        return;
    }

    node* temp  = head;
    int cnt = 1;

    while(cnt < position-1) 
    {
        temp = temp->next;
        cnt++;
    }

    node* nodeToInsert = new node(d);

    nodeToInsert -> next = temp -> next;
    temp -> next = nodeToInsert;
}

void tail(node* &head, int val)
{
	node* n = new node(val);
	
	if(head == NULL)
	{
		head=n;
		return;
	}
	
	node* temp = head;
	while(temp->next!=NULL)
	{
		temp = temp->next;
	}
	temp->next = n;
}

void display(node* &head)
{
	cout<<"\nLinked List"<<endl;
	node* temp = head;
	while(temp!=NULL)
	{
		cout<<"Element: "<<temp->data<<endl;
		temp = temp->next;
	}
}

int main()
{
	node* head = new node(94);
	Head(head,89);
	Head(head,56);
	Head(head,23);
	display(head);
	tail(head,67);
	tail(head,34);
	tail(head,12);
	display(head);
	insertAtPosition(head,2,11);
	insertAtPosition(head,3,22);
	display(head);
}


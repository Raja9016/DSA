#include<iostream>
using namespace std;

class node
{
	public:
		int data;
		node* next;
		
	node(int val)
	{
		this->data = val;
		this->next = NULL;
	}
};

void insertion(node* &head,int val)
{
	node* temp = new node(val);
	temp->next = head;
	head = temp;
}

void insertAtPosition(Node* &tail, Node* & head, int position, int d)
{
    if(position == 1) 
    {
        insertAtHead(head, d);
        return;
    }

    Node* temp  = head;
    int cnt = 1;

    while(cnt < position-1) 
    {
        temp = temp->next;
        cnt++;
    }

    if(temp -> next == NULL) 
    {
        insertAtTail(tail,d);
        return ;
    }

    Node* nodeToInsert = new Node(d);

    nodeToInsert -> next = temp -> next;
    temp -> next = nodeToInsert;
}

void tail(node* &head, int val)
{
	node* n = new node(val);
	
	if(head == NULL)
	{
		head=n;
		return;
	}
	
	node* temp = head;
	while(temp->next!=NULL)
	{
		temp = temp->next;
	}
	temp->next = n;
}

void display(node* &head)
{
	cout<<"\nLinked List"<<endl;
	node* temp = head;
	while(temp!=NULL)
	{
		cout<<"Element: "<<temp->data<<endl;
		temp = temp->next;
	}
}

int main()
{
	node* head = new node(94);
	insertion(head,89);
	insertion(head,56);
	insertion(head,23);
	display(head);
	tail(head,67);
	tail(head,34);
	tail(head,12);
	display(head);
	index(head,2,69);
	index(head,4,70);
	display(head);
}
